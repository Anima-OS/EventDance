EventDance 0.1 README
=====================

Peer-to-peer inter-process communication library.

EventDance is an open source library for interconnecting heterogeneous
applications in a simple, secure and scalable fashion. It provides
a nice API to send and receive data among distributed applications over
different types of transports. This and other features like cryptography,
make EventDance a perfect choice for peer-to-peer application
development.

EventDance currently requires:

  * GLib >= 2.23.0
  * libsoup-2.4 >= 2.23.0
  * gnutls >= 2.6.5
  * uuid >= 2.16.0

If you are building the API reference you will also need:

  * GTK-Doc >= 1.11

If you are building the Introspection data you will also need:

  * GObject-Introspection >= 0.6.7

If you are building the Javascript support you will also need:

  * GJS >= 0.3

The official website is:
   (no official website yet)

The EventDance blog is at:
   http://blogs.igalia.com/elima

To subscribe to the EventDance mailing list, send mail to:
   (no mailing list yet)

The official mailing list archive is:
   (no mailing-list archive yet)

Bug reporting and tracking:
   (by now, just mail elima@igalia.com)

EventDance is licensed under the terms of the GNU Lesser General Public
License, version 3 or (at your option) later. See COPYING for more information.

INSTALLATION
============

$ ./autogen.sh
$ make
# make install

See the INSTALL file for details. Specific EventDance options to pass
in autogen.sh:

 --enable-gtk-doc
	use gtk-doc to build API documentation (default=no). Requires gtk-doc
	present on system.

 --enable-introspection
        build the introspection data. Requires GObject-Introspection
        present on system.

 --enable-js
        enable server-side Javascript tests and examples. Requires GJS, and
        GObject-Introspection present on system and enabled in build
        options.

VERSIONING
==========

EventDance uses the common "Linux kernel" versioning system, where
even-numbered minor versions are stable and odd-numbered minor
versions are development snapshots.

Different major versions break both API and ABI but are parallel
installable. The same major version with differing minor version is
expected to be ABI compatible with other minor versions; differing
micro versions are meant just for bug fixing. On odd minor versions
the newly added API might still change.

The micro version indicates the origin of the release: even micro
numbers are only used for released archives; odd micro numbers are
only used on the repository.
